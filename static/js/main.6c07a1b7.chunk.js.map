{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","utils/getPreparedTodos.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","query","status","initialState","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppSelector","useDispatch","useSelector","TodoList","dispatch","visibleTodos","useMemo","preparedTodos","completed","trim","title","toLocaleUpperCase","includes","getPreparedTodos","className","map","id","classNames","onClick","handleChangeSelectTodo","TodoFilter","onChange","event","actionFilter","target","value","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","loading","setLoading","useEffect","userId","catch","error","Error","message","finally","href","email","name","App","isLoading","setIsLoading","errorMessage","setErrorMessage","TodosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c07a1b7.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype AddQuery = {\n  type: 'Add/Query';\n  payload: string;\n};\n\ntype AddStatus = {\n  type: 'Add/Status';\n  payload: string;\n};\n\ntype Action = AddQuery | AddStatus;\n\nconst addQuery = (query: string): Action => ({\n  type: 'Add/Query',\n  payload: query,\n});\nconst addStatus = (status: Status): Action => ({\n  type: 'Add/Status',\n  payload: status,\n});\n\nexport const actions = { addQuery, addStatus };\n\nconst initialState = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case 'Add/Query':\n      return {\n        ...state,\n        query: action.payload,\n      };\n    case 'Add/Status':\n      return {\n        ...state,\n        status: action.payload,\n      };\n    default:\n      return {\n        query: '',\n        status: 'all',\n      };\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype AddAction = {\n  type: 'todo/ADD';\n  payload: Todo[];\n};\n\ntype Action = AddAction;\n\nconst add = (todos: Todo[]): AddAction => ({\n  type: 'todo/ADD',\n  payload: todos,\n});\n\nexport const actions = { add };\n\nconst todosReducer = (todos:Todo[] = [], action: Action) => {\n  switch (action.type) {\n    case 'todo/ADD':\n      return [...action.payload];\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { getPreparedTodos } from '../../utils/getPreparedTodos';\n\nexport const TodoList: React.FC = () => {\n  const todos:Todo[] = useAppSelector(state => state.todos);\n  const status = useAppSelector(state => state.filter.status);\n  const query = useAppSelector(state => state.filter.query);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useDispatch();\n  const visibleTodos = useMemo(() => {\n    return getPreparedTodos(todos, status, query);\n  }, [todos, status, query]);\n\n  const handleChangeSelectTodo = (todo: Todo) => {\n    dispatch(actions.setTodo(todo));\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map((todo: Todo) => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(todo.completed === true\n                  ? 'has-text-success' : 'has-text-danger')}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleChangeSelectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(todo.id !== currentTodo?.id\n                    ? 'far fa-eye' : 'far fa-eye-slash')}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport function getPreparedTodos(\n  todos: Todo[], status: string, query: string,\n) {\n  let preparedTodos = [...todos];\n\n  if (status) {\n    preparedTodos = preparedTodos.filter(todo => {\n      switch (status) {\n        case 'active': {\n          return !todo.completed;\n        }\n\n        case 'completed': {\n          return todo.completed;\n        }\n\n        default:\n          return true;\n      }\n    });\n  }\n\n  if (query.trim()) {\n    preparedTodos = preparedTodos.filter(todo => todo.title\n      .toLocaleUpperCase().includes(query.toLocaleUpperCase()));\n  }\n\n  return preparedTodos;\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as actionFilter } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const query = useAppSelector(state => state.filter.query);\n  const dispatch = useDispatch();\n  const handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(actionFilter.addStatus(event.target.value as Status));\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(actionFilter.addQuery(event.target.value as string));\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleChangeSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          value={query}\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(actionFilter.addQuery(''))}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n  const currentTodo = useAppSelector((state: {\n    currentTodo: Todo | null; }) => state.currentTodo);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setLoading(true);\n    if (currentTodo?.id) {\n      getUser(currentTodo.userId)\n        .then(setUser)\n        .catch((error) => {\n          throw new Error(error.message);\n        })\n        .finally(() => setLoading(false));\n    }\n  }, [currentTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {currentTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(actions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={`has-text-${currentTodo?.completed ? 'success' : 'danger'}`}\n              >\n                {currentTodo?.completed ? 'Done ' : 'Planned '}\n              </strong>\n              {'by '}\n              {user && (\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { useDispatch } from 'react-redux';\nimport { useAppSelector } from './app/hooks';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { actions as TodosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((todos) => dispatch(TodosActions.add(todos)))\n      .catch(error => setErrorMessage(error.message))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            {isLoading && (\n              <Loader />\n            )}\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            {!errorMessage && (\n              <div className=\"block\">\n                <TodoList />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}